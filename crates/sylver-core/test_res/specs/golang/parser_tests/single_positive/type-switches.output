File {
. ● name: Identifier { main }
. ● decls: List {
. . ImportDecl {
. . . ● specs: ImportSpec {
. . . . ● path: InterpretedStringLit { "fmt" }
. . . }
. . }
. . FuncDecl {
. . . ● name: Identifier { do }
. . . ● type: FuncType {
. . . . ● params: List {
. . . . . FuncTypeParam {
. . . . . . ● names: List {
. . . . . . . Identifier { i }
. . . . . . }
. . . . . . ● type: InterfaceType {
. . . . . . . ● elems: List {  }
. . . . . . }
. . . . . }
. . . . }
. . . }
. . . ● body: BlockStmt {
. . . . ● list: List {
. . . . . TypeSwitchStmt {
. . . . . . ● alias: Identifier { v }
. . . . . . ● value: Identifier { i }
. . . . . . ● clauses: List {
. . . . . . . TypeCaseClause {
. . . . . . . . ● types: List {
. . . . . . . . . TypeIdent {
. . . . . . . . . . ● name: Identifier { int }
. . . . . . . . . }
. . . . . . . . }
. . . . . . . . ● body: List {
. . . . . . . . . CallExpr {
. . . . . . . . . . ● fun: SelectorExpr {
. . . . . . . . . . . ● x: Identifier { fmt }
. . . . . . . . . . . ● sel: Identifier { Printf }
. . . . . . . . . . }
. . . . . . . . . . ● args: List {
. . . . . . . . . . . InterpretedStringLit { "Twice %v is %v\n" }
. . . . . . . . . . . Identifier { v }
. . . . . . . . . . . BinOp {
. . . . . . . . . . . . ● left: Identifier { v }
. . . . . . . . . . . . ● op: Times { * }
. . . . . . . . . . . . ● right: IntLit { 2 }
. . . . . . . . . . . }
. . . . . . . . . . }
. . . . . . . . . }
. . . . . . . . }
. . . . . . . }
. . . . . . . TypeCaseClause {
. . . . . . . . ● types: List {
. . . . . . . . . TypeIdent {
. . . . . . . . . . ● name: Identifier { string }
. . . . . . . . . }
. . . . . . . . }
. . . . . . . . ● body: List {
. . . . . . . . . CallExpr {
. . . . . . . . . . ● fun: SelectorExpr {
. . . . . . . . . . . ● x: Identifier { fmt }
. . . . . . . . . . . ● sel: Identifier { Printf }
. . . . . . . . . . }
. . . . . . . . . . ● args: List {
. . . . . . . . . . . InterpretedStringLit { "%q is %v bytes long\n" }
. . . . . . . . . . . Identifier { v }
. . . . . . . . . . . CallExpr {
. . . . . . . . . . . . ● fun: Identifier { len }
. . . . . . . . . . . . ● args: List {
. . . . . . . . . . . . . Identifier { v }
. . . . . . . . . . . . }
. . . . . . . . . . . }
. . . . . . . . . . }
. . . . . . . . . }
. . . . . . . . }
. . . . . . . }
. . . . . . . TypeCaseClause {
. . . . . . . . ● body: List {
. . . . . . . . . CallExpr {
. . . . . . . . . . ● fun: SelectorExpr {
. . . . . . . . . . . ● x: Identifier { fmt }
. . . . . . . . . . . ● sel: Identifier { Printf }
. . . . . . . . . . }
. . . . . . . . . . ● args: List {
. . . . . . . . . . . InterpretedStringLit { "I don't know about type %T!\n" }
. . . . . . . . . . . Identifier { v }
. . . . . . . . . . }
. . . . . . . . . }
. . . . . . . . }
. . . . . . . }
. . . . . . }
. . . . . }
. . . . }
. . . }
. . }
. . FuncDecl {
. . . ● name: Identifier { main }
. . . ● type: FuncType {
. . . . ● params: List {  }
. . . }
. . . ● body: BlockStmt {
. . . . ● list: List {
. . . . . CallExpr {
. . . . . . ● fun: Identifier { do }
. . . . . . ● args: List {
. . . . . . . IntLit { 21 }
. . . . . . }
. . . . . }
. . . . . CallExpr {
. . . . . . ● fun: Identifier { do }
. . . . . . ● args: List {
. . . . . . . InterpretedStringLit { "hello" }
. . . . . . }
. . . . . }
. . . . . CallExpr {
. . . . . . ● fun: Identifier { do }
. . . . . . ● args: List {
. . . . . . . BoolLit { true }
. . . . . . }
. . . . . }
. . . . }
. . . }
. . }
. }
}
