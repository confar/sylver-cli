File {
. ● name: Identifier { main }
. ● decls: List {
. . ImportDecl {
. . . ● specs: ImportSpec {
. . . . ● path: InterpretedStringLit { "fmt" }
. . . }
. . }
. . FuncDecl {
. . . ● name: Identifier { main }
. . . ● type: FuncType {
. . . . ● params: List {  }
. . . }
. . . ● body: BlockStmt {
. . . . ● list: List {
. . . . . VarDecl {
. . . . . . ● names: List {
. . . . . . . Identifier { a }
. . . . . . }
. . . . . . ● type: ArrayType {
. . . . . . . ● length: IntLit { 2 }
. . . . . . . ● elemsType: TypeIdent {
. . . . . . . . ● name: Identifier { string }
. . . . . . . }
. . . . . . }
. . . . . }
. . . . . AssignStmt {
. . . . . . ● lhs: List {
. . . . . . . IndexExpr {
. . . . . . . . ● operand: Identifier { a }
. . . . . . . . ● index: IntLit { 0 }
. . . . . . . }
. . . . . . }
. . . . . . ● rhs: List {
. . . . . . . InterpretedStringLit { "Hello" }
. . . . . . }
. . . . . }
. . . . . AssignStmt {
. . . . . . ● lhs: List {
. . . . . . . IndexExpr {
. . . . . . . . ● operand: Identifier { a }
. . . . . . . . ● index: IntLit { 1 }
. . . . . . . }
. . . . . . }
. . . . . . ● rhs: List {
. . . . . . . InterpretedStringLit { "World" }
. . . . . . }
. . . . . }
. . . . . CallExpr {
. . . . . . ● fun: SelectorExpr {
. . . . . . . ● x: Identifier { fmt }
. . . . . . . ● sel: Identifier { Println }
. . . . . . }
. . . . . . ● args: List {
. . . . . . . IndexExpr {
. . . . . . . . ● operand: Identifier { a }
. . . . . . . . ● index: IntLit { 0 }
. . . . . . . }
. . . . . . . IndexExpr {
. . . . . . . . ● operand: Identifier { a }
. . . . . . . . ● index: IntLit { 1 }
. . . . . . . }
. . . . . . }
. . . . . }
. . . . . CallExpr {
. . . . . . ● fun: SelectorExpr {
. . . . . . . ● x: Identifier { fmt }
. . . . . . . ● sel: Identifier { Println }
. . . . . . }
. . . . . . ● args: List {
. . . . . . . Identifier { a }
. . . . . . }
. . . . . }
. . . . . ShortVarDecl {
. . . . . . ● names: List {
. . . . . . . Identifier { primes }
. . . . . . }
. . . . . . ● values: List {
. . . . . . . CompositeLit {
. . . . . . . . ● type: ArrayType {
. . . . . . . . . ● length: IntLit { 6 }
. . . . . . . . . ● elemsType: TypeIdent {
. . . . . . . . . . ● name: Identifier { int }
. . . . . . . . . }
. . . . . . . . }
. . . . . . . . ● body: LiteralValue {
. . . . . . . . . ● elements: List {
. . . . . . . . . . CompositeLitElem {
. . . . . . . . . . . ● value: IntLit { 2 }
. . . . . . . . . . }
. . . . . . . . . . CompositeLitElem {
. . . . . . . . . . . ● value: IntLit { 3 }
. . . . . . . . . . }
. . . . . . . . . . CompositeLitElem {
. . . . . . . . . . . ● value: IntLit { 5 }
. . . . . . . . . . }
. . . . . . . . . . CompositeLitElem {
. . . . . . . . . . . ● value: IntLit { 7 }
. . . . . . . . . . }
. . . . . . . . . . CompositeLitElem {
. . . . . . . . . . . ● value: IntLit { 11 }
. . . . . . . . . . }
. . . . . . . . . . CompositeLitElem {
. . . . . . . . . . . ● value: IntLit { 13 }
. . . . . . . . . . }
. . . . . . . . . }
. . . . . . . . }
. . . . . . . }
. . . . . . }
. . . . . }
. . . . . CallExpr {
. . . . . . ● fun: SelectorExpr {
. . . . . . . ● x: Identifier { fmt }
. . . . . . . ● sel: Identifier { Println }
. . . . . . }
. . . . . . ● args: List {
. . . . . . . Identifier { primes }
. . . . . . }
. . . . . }
. . . . }
. . . }
. . }
. }
}
